# Update this with your service name
service: ${env:APP_NAME}-billing-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

custom: ${file(../../serverless.common.yml):custom}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: ${env:REGION}
  tracing:
    labmda: true

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-${env:APP_NAME}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-${env:APP_NAME}-ApiGatewayRestApiRootResourceId

  # Environment variables made available to our functions under process.env
  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}
    notePurchasedTopicArn:
      Ref: NotePurchasedTopic

  # 'iamRoleStatements' bloc defines the permission policy for the Lambda function
  iamRoleStatements:
    - ${file(../../serverless.common.yml):lambdaPolicyXRay}
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:ssm:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':parameter/stripeSecretKey/*'

    - Effecgt: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: NotePurchasedTopic

functions:
  billing:
    # Defines an HTTP API endpoint that calls the main function in billing.js
    # - path: url path is /billing
    # - method: POST request
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  Resources:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: note-purchased-${self:custom.stage}

  Outputs:
    NotePurchasedTopicArn:
      Value:
        Ref: NotePurchasedTopic
      Export:
        Name: NotePurchasedTopicArn-${env:APP_NAME}-${self:custom.stage}
